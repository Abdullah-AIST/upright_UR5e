model_settings
{
  usePreComputation             false  ; keep false: not supported for tray balance
  recompileLibraries            true
}

; DDP settings
ddp
{
  algorithm                     ILQR  ; ILQR or SLQ

  nThreads                      3

  maxNumIterations              10
  minRelCost                    0.1
  constraintTolerance           1e-3

  displayInfo                   true
  displayShortSummary           false
  checkNumericalStability       false

  AbsTolODE                     1e-5
  RelTolODE                     1e-3
  timeStep                      1e-3
  maxNumStepsPerSecond          100000
  backwardPassIntegratorType    ODE45

  inequalityConstraintMu        100.0
  inequalityConstraintDelta     1.1

  preComputeRiccatiTerms        false
  useNominalTimeForBackwardPass false

  useFeedbackPolicy             true

  strategy                      LINE_SEARCH
  lineSearch
  {
    minStepLength                 1e-2
    maxStepLength                 1.0
    hessianCorrectionStrategy     DIAGONAL_SHIFT
    hessianCorrectionMultiple     1e-3
  }
}

; multiple_shooting settings
multiple_shooting
{
  dt                            0.1
  sqpIteration                  10
  deltaTol                      1e-3
  printSolverStatistics         true
  printSolverStatus             true
  printLinesearch               true
  useFeedbackPolicy             true
  integratorType                RK4
  nThreads                      4

  ; inequalityConstraintMu    1e-2
  ; inequalityConstraintDelta 1e-3
}

; Rollout settings
rollout
{
  AbsTolODE                     1e-5
  RelTolODE                     1e-3
  timeStep                      1e-2
  maxNumStepsPerSecond          100000

  ; good for checking things like that values are finite: spits out a lot of
  ; debug info
  checkNumericalStability       false
}

; MPC settings
mpc
{
  timeHorizon                    3.0
  numPartitions                  10

  runtimeMaxNumIterations        3
  initMaxNumIterations           100

  runtimeMaxStepLength           1.0
  runtimeMinStepLength           1e-2
  initMaxStepLength              1.0
  initMinStepLength              1e-2

  debugPrint                     true
  coldStart                      false

  useParallelRiccatiSolver       true  ; use disjoint riccati solver in MP case and recedingHorizon fashion

  solutionTimeWindow             -1   ; [s]

  mpcDesiredFrequency            10   ; [Hz]
  mrtDesiredFrequency            10   ; [Hz]
}

; initial state
initialState
{
  (0,0)  0.0  ; position x
  (1,0)  0.0  ; position y
  (2,0)  0.0  ; heading
  (3,0)  0.0  ; SH_ROT
  (4,0) -2.3552  ; SH_FLE
  (5,0) -1.5708  ; EL_FLE
  (6,0) -0.7854  ; EL_ROT
  (7,0) -1.5708  ; WR_FLE
  (8,0)  1.5708  ; WR_ROT

  (9,0)  0.0  ; velocity x
  (10,0)  0.0  ; velocity y
  (11,0)  0.0  ; angular velocity
  (12,0)  0.0  ; arm 1
  (13,0)  0.0  ; arm 2
  (14,0)  0.0  ; arm 3
  (15,0)  0.0  ; arm 4
  (16,0)  0.0  ; arm 5
  (17,0)  0.0  ; arm 6
}

inputCost
{
  ; control weight matrix
  R
  {
    scaling 1e-1

    (0,0)  1.0  ; x velocity
    (1,1)  1.0  ; y velocity
    (2,2)  1.0  ; angle velocity
    (3,3)  1.0  ; SH_ROT velocity
    (4,4)  1.0  ; SH_FLE velocity
    (5,5)  1.0  ; EL_FLE velocity
    (6,6)  1.0  ; EL_ROT velocity
    (7,7)  1.0  ; WR_FLE velocity
    (8,8)  1.0  ; WR_ROT velocity
  }
}

stateCost
{
  ; state weight matrix
  Q
  {
    scaling 1e-1

    ; position
    (0,0)  0.0
    (1,1)  0.0
    (2,2)  0.0
    (3,3)  0.0
    (4,4)  0.0
    (5,5)  0.0
    (6,6)  0.0
    (7,7)  0.0
    (8,8)  0.0

    ; velocity
    (9,9)    1.0
    (10,10)  1.0
    (11,11)  1.0
    (12,12)  1.0
    (13,13)  1.0
    (14,14)  1.0
    (15,15)  1.0
    (16,16)  1.0
    (17,17)  1.0
  }
}

endEffectorCost
{
  W
  {
    scaling 1

    (0,0)  1.0
    (1,1)  1.0
    (2,2)  1.0
    (3,3)  0.0
    (4,4)  0.0
    (5,5)  1.0
  }

}

jointLimits
{
  state
  {
    lowerBound
    {
      ; positions
      (0,0) -10.0  ; x
      (1,0) -10.0  ; y
      (2,0) -10.0  ; angle
      (3,0) -6.28319  ; SH_ROT
      (4,0) -6.28319  ; SH_FLE
      (5,0) -6.28319  ; EL_FLE
      (6,0) -6.28319  ; EL_ROT
      (7,0) -6.28319  ; WR_FLE
      (8,0) -6.28319  ; WR_ROT

      ; velocities
      (9,0)  -1.0  ; x velocity
      (10,0) -1.0  ; y velocity
      (11,0) -1.0  ; angle velocity
      (12,0) -2.0  ; SH_ROT
      (13,0) -2.0  ; SH_FLE
      (14,0) -2.0  ; EL_FLE
      (15,0) -2.0  ; EL_ROT
      (16,0) -2.0  ; WR_FLE
      (17,0) -2.0  ; WR_ROT
    }

    upperBound
    {
      ; positions
      (0,0) 10.0  ; x
      (1,0) 10.0  ; y
      (2,0) 10.0  ; angle
      (3,0) 6.28319  ; SH_ROT
      (4,0) 6.28319  ; SH_FLE
      (5,0) 6.28319  ; EL_FLE
      (6,0) 6.28319  ; EL_ROT
      (7,0) 6.28319  ; WR_FLE
      (8,0) 6.28319  ; WR_ROT

      ; velocities
      (9,0)  1.0  ; x velocity
      (10,0) 1.0  ; y velocity
      (11,0) 1.0  ; angle velocity
      (12,0) 2.0  ; SH_ROT
      (13,0) 2.0  ; SH_FLE
      (14,0) 2.0  ; EL_FLE
      (15,0) 2.0  ; EL_ROT
      (16,0) 2.0  ; WR_FLE
      (17,0) 2.0  ; WR_ROT
    }

    mu    1e-2
    delta 1e-3
  }

  input
  {
    lowerBound
    {
      (0,0) -2.0  ; x velocity
      (1,0) -2.0  ; y velocity
      (2,0) -2.0  ; angle velocity
      (3,0) -4.0  ; SH_ROT
      (4,0) -4.0  ; SH_FLE
      (5,0) -4.0  ; EL_FLE
      (6,0) -4.0  ; EL_ROT
      (7,0) -4.0  ; WR_FLE
      (8,0) -4.0  ; WR_ROT
    }

    upperBound
    {
      (0,0) 2.0  ; x velocity
      (1,0) 2.0  ; y velocity
      (2,0) 2.0  ; angle velocity
      (3,0) 4.0  ; SH_ROT
      (4,0) 4.0  ; SH_FLE
      (5,0) 4.0  ; EL_FLE
      (6,0) 4.0  ; EL_ROT
      (7,0) 4.0  ; WR_FLE
      (8,0) 4.0  ; WR_ROT
    }

    mu    1e-2
    delta 1e-3
  }
}

urdfSettings
{
  package           tray_balance_assets  ; ROS package where URDFs are stored
  robotUrdfPath     /urdf/mm_ocs2.urdf
  obstacleUrdfPath  /urdf/obstacles.urdf
}
