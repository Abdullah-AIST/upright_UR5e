include:
  -
    package: upright_cmd
    path: config/arrangements.yaml

# compute a new control policy every `control_period` seconds
timestep: 0.025
use_noisy_state_to_plan: true
gravity: [0, 0, -9.81]
solver_method: SQP  # SQP or DDP

balancing:
  arrangement: nothing
  constraint_type: soft
  enabled: true
  use_force_constraints: false
  use_bounded_constraints: true
  enable_normal_constraint: true
  enable_friction_constraint: true
  enable_zmp_constraint: true

  force_weight: 0.001

  mu: 1e-3
  delta: 1e-3

inertial_alignment:
  cost_enabled: false
  constraint_enabled: false
  use_angular_acceleration: false
  use_constraint: true
  cost_weight: 1
  contact_plane_normal: [0, 0, 1]
  com: [0, 0, 0]

end_effector_box_constraint:
  enabled: false
  xyz_lower: [-1., -1., -0.5]
  xyz_upper: [1., 1., 0.5]

# needs to be implemented for each particular system
tracking:
  rate: 125
  Kp:
    scale: 1
    diag: [1rep9]

# desired waypoints are set relative to the initial EE pose
# each waypoint consists of:
#   millis: time from beginning of trajectory in milliseconds
#   position: [x, y, z] end effector position
#   orientation: [x, y, z, w] end effector orientation quaternion
# waypoints:
#   -
#     millis: 0
#     position: [2.0, 0.0, 0.0]
#     orientation: [0.0, 0.0, 0.0, 1.0]

obstacles:
  enabled: false
  constraint_type: hard

  # extra margin between objects
  # Important: this needs to be > 0 for the resulting constraint to be
  # differentiable
  minimum_distance: 0.1

  # relaxed barrier function parameters
  mu: 1e-2
  delta: 1e-3

operating_points:
  enabled: false

infofile:
  package: "upright_control"
  path: "config/mpc/task.info"

# NOTE: for now we assume inertia is exact, but we should use parallel axis
# theorem to account for com_offset
objects:
  # EE is a special object
  # original box tray
  # ee:
  #   shape:
  #     type: cuboid
  #     side_lengths: [0.23, 0.3, 0.064]
  #   position: [0.1, 0.13, -0.032]  # box centroid relative to r_ew_w

  # new round tray
  ee:
    shape:
      type: cuboid
      side_lengths: [0.356, 0.356, 0.01]
    position: [0.09, 0.115, -0.035]  # box centroid relative to r_ew_w

  cube:
    mass: 1.0
    com_offset: [0, 0, 0]
    shape:
        type: cuboid
        side_lengths: [0.1, 0.1, 0.01]

  bottle:
    mass: 0.5
    com_offset: [0, 0, 0]
    # TODO revise this
    shape:
      type: cylinder
      radius: 0.0325
      height: 0.15

  wood_block:
    mass: 0.18
    com_offset: [0, 0, 0]  # relative to centroid of shape
    shape:
      type: cuboid
      side_lengths: [0.103, 0.09, 0.038]

  wood_block_rotx:
    mass: 0.18
    com_offset: [0, 0, 0]
    shape:
      type: cuboid
      side_lengths: [0.103, 0.038, 0.09]

  wood_block_rotz:
    mass: 0.18
    com_offset: [0, 0, 0]
    shape:
      type: cuboid
      side_lengths: [0.09, 0.103, 0.038]

  wood_block_composite:
    mass: 0.54
    com_offset: [0, 0, 0]
    shape:
      type: cuboid
      side_lengths: [0.103, 0.103, 0.128]

  foam_die:
    mass: 0.02
    com_offset: [0, 0, 0]
    shape:
      type: cuboid
      side_lengths: [0.065, 0.065, 0.065]

  tall_box:
    mass: 0.04
    com_offset: [0, 0, 0]
    shape:
      type: cuboid
      side_lengths: [0.065, 0.065, 0.13]

  really_tall_box:
    mass: 0.5
    com_offset: [0, 0, 0]
    shape:
      type: cylinder
      height: 0.205
      # height: 0.5
      radius: 0.035

  wedge:
    mass: 0.09
    com_offset: [0, 0, 0]
    shape:
      type: right_triangular_prism
      side_lengths: [0.103, 0.09, 0.038]

  fixture:
    mass: 0.1
    com_offset: [0, 0, 0]
    shape:
      type: cuboid
      side_lengths: [0.05, 0.05, 0.05]
